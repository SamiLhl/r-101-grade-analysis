---
title: "Grade_Analysis_SL"
author: "Sami Louahlia"
format: html
code-fold: true
---
```{r}
#|message: false
here::i_am("r-101-grade-analysis.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
```

### Q1 Data
```{r}
#|message: false
grade <- vroom(here("grades.csv"))
```
### Q2 
```{r}
Q2 <- grade |> summarize("minimum" = min(Exam, na.rm=TRUE), "maxixmum" = max(Exam, na.rm=TRUE), "median" = median(Exam, na.rm=TRUE), "mean" = mean(Exam, na.rm=TRUE))

table2 <- knitr::kable(Q2)
```
This table offers descriptive of the variable Exam
`r table2`

### Q3 
```{r}
NoFinal <- grade |> filter(is.na(Exam)==TRUE)
NoFinalnb <- count(NoFinal)
```
A total of `r NoFinalnb` students did not take the final exam.

### Q4 
```{r}
GradeB <- grade |> filter(!is.na(Exam))
ggplot(GradeB, aes(x = Exam))+
  geom_bar()

```

### Q5 
```{r}
grouped_grade <- grade|> group_by(Group)
 countpergroup <- count(grouped_grade)
 table5<- knitr::kable(countpergroup)
```
This table shows how many people can be found in each groups (here called grp)
`r table5`

### Q6
```{r}
ggplot(grade, aes(x=Group))+
  geom_bar()
```
Here is a graphical representation of the group's number of members.

### Q7
```{r}
ggplot(GradeB, aes(x=Exam, fill=Group))+
  geom_bar()
```
This is visually pleasing. However, it seems rather uninformative :(
```{r}
ggplot(GradeB, aes(x=Exam, fill=Group))+
  geom_bar(position="fill")
```
This makes the group comparable in relative terms. We however lose the absolute grade distribution in the process.

### Q8
```{r}
Q8 <- grade |> group_by(Group) |>
  summarise(Missed_Fin = sum(is.na(Exam)))

table8<- knitr::kable(Q8)
```

The number of students missing the final exam per group is as shown in this table.
`r table8`

### Q9
```{r}
Q8 |> group_by(Group)
ggplot(Q8,aes(x= Group, y = Missed_Fin)) +
         geom_col()+
xlab("Groups")+
ylab("Nb of skippers")
```

This is a graphical representation of the previous question. 

### Q10 

```{r}
New_Grade <- grade |> pivot_longer(cols = -c(Id, Group),
names_to="Exam_form",
values_to ="Grade")
```

### Q11

```{r}
Q11 <- New_Grade |> group_by(Id) |>
  summarise(Q11 = sum(is.na(Grade)))
print(Q11)

```


